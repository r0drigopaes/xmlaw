/******************************************************************
 * @(#) Simuate.java     1.3
 *
 * Copyright (c) 2000 John Miller
 * All Right Reserved
 *-----------------------------------------------------------------
 * Permission to use, copy, modify and distribute this software and
 * its documentation without fee is hereby granted provided that
 * this copyright notice appears in all copies.
 * WE MAKE NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY
 * OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT
 * LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. WE SHALL NOT BE
 * LIABLE FOR ANY DAMAGES SUFFERED BY ANY USER AS A RESULT OFUSING,
 * MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
 *-----------------------------------------------------------------
 *
 * @version     1.3 (5 December 2000)
 * @author      Xueqin Huang, John Miller
 */

package jsim.jmessage;

import java.io.Serializable;

import jsim.util.Trunc;

/******************************************************************
 * This class contains the control data, which will be passed from
 * a model agent to a model bean to control the execution of a
 * simulation and improve the quality of simulation result. The control
 * data, together with the model input and output, may also be stored in
 * the database later on.
 */
public class Simuate extends Message
{
    //////////////////////// Constants \\\\\\\\\\\\\\\\\\\\\\\\\\\\
    /**
     * This serialization ID is needed to prevent the Cloudscape 
     * database from refusing to store an instance of this class
     * when more fields are added to this class. (This is to trick
     * the JVM to ignore possible modifications and take instances
     * of this class before and after modification as the same type.
     */
    private static final long	serialVersionUID=675650800527491650L;

    /**
     * Name of the agent that generates the control data
     */
    public String              agentName;

    ////////////// Fields Required by the BatchMeansAgent \\\\\\
    /**
     * Batch size.
     */
    public Integer             batchSize = null;

    /**
     * Number of batches.
     */
    public Integer             numOfBatches = null;

    /**
     * Relative precision.
     */
    public Double              relativePrecision = null;

    /**
     * Confidence level.
     */
    public Double              confidenceLevel = null;

    ////////////// Fields Required by the ReplicatonAgent \\\\\\
    /**
     * Replication size.
     */
    public Integer             replicationSize = null;

    /**
     * Number of replications.
     */
    public Integer             numOfReplications = null;

    /**
     * Transient period.
     */
    public Double              transientPeriod = null;


    /**************************************************************
     * Constructs Simuate generated by the BatchMeansAgent.
     * @param  actionType		The action type
     * @param  agentName		The name of the agent
     * @param  batchSize		The batch size
     * @param  numOfBatches		The number of batches
     * @param  relativePrecision	The relative precision
     * @param  confidenceLevel		The confidence level
     */
    public Simuate (    String     actionType,
			String     agentName,
                        Integer    batchSize,
                        Integer    numOfBatches,
                        Double     relativePrecision,  
                        Double     confidenceLevel)
    {
	this.actionType = actionType;
        this.agentName = agentName;
        this.batchSize = batchSize;
        this.numOfBatches = numOfBatches;
        this.relativePrecision = Trunc.trunc (relativePrecision);
        this.confidenceLevel = Trunc.trunc (confidenceLevel);

    }; // Simuate constructor


    /**************************************************************
     * Constructs Simuate generated by the ReplicationAgent.
     * @param  actionType               The action type
     * @param  agentName		Name of the agent
     * @param  replicationSize		Replication size
     * @param  numOfReplications	Number of replications
     * @param  transientPeriod		Transient period
     */
    public Simuate (    String     actionType,
			String     agentName,
                        Integer    replicationSize,
                        Integer    numOfReplications,
                        Double     transientPeriod) 
    {
	this.actionType = actionType;
        this.agentName = agentName;
        this.replicationSize = replicationSize;
        this.numOfReplications = numOfReplications;
        this.transientPeriod = Trunc.trunc (transientPeriod);

    }; // Simuate constructor


    /**************************************************************
     * Returns the name of the agent.
     * @return  String		Agent name
     */     
    public String    getAgentName ()  
    { 
	return agentName;
 
    }; // getAgentName


    /**************************************************************
     * Returns the batch size.
     * @return  Integer		The batch size.
     */
    public Integer   getBatchSize () 
    { 
	return batchSize; 

    }; // getBatchSize


    /**************************************************************
     * Returns the number of batches.
     * @return  Integer		The number of batches.
     */
    public Integer   getNumOfBatches () 
    { 
	return numOfBatches; 

    }; // getNumOfBatches

    /**************************************************************
     * Returns the relative precision.
     * @param  Double		The relative precision.
     */
    public Double    getRelativePrecision () 
    { 
	return relativePrecision; 

    }; // getRelativePrecision

    /**************************************************************
     * Returns the confidence level.
     * @return  Double		The confidence level.
     */
    public Double    getConfidenceLevel ()  
    { 
	return confidenceLevel; 

    }; // getConfidenceLevel

    /**************************************************************
     * Returns the replication size.
     * @return  Integer		The replication size.
     */
    public Integer   getReplicationSize () 
    { 
	return replicationSize; 
    
    }; // getReplicationSize

    /**************************************************************
     * Returns the number of replications.
     * @param  Integer		The number of replications.
     */
    public Integer   getNumOfReplications () 
    { 
	return numOfReplications; 

    }; // getNumOfReplications

    /**************************************************************
     * Returns the transient period.
     * @return  Double		The transient period.
     */
    public Double    getTransientPeriod () 
    { 
	return transientPeriod; 

    }; // getTransientPeriod

    /**************************************************************
     * Converts this class into an XML fragment. This method is invoked
     * by the Result class to transform a query result containing this
     * and other Java objects into an XML document.
     */
    public String toString ()
    {
	String xmlStr = "";

	xmlStr += "\n        <AgentName>" + agentName + "</AgentName>";

	if (batchSize != null) {
		xmlStr += "\n        <BatchSize>" 
			+ batchSize + "</BatchSize>";
	};

	if (numOfBatches != null) {
		xmlStr += "\n        <NumOfBatches>" 
			+ numOfBatches + "</NumOfBatches>";
	};

	if (replicationSize != null) {
		xmlStr += "\n        <ReplicationSize>" 
			+ replicationSize + "</ReplicationSize>";
	};

	if (numOfReplications != null) {
		xmlStr += "\n        <NumOfReplications>" + numOfReplications
			+ "</NumOfReplications>";

	};

	if (relativePrecision != null) {
		xmlStr += "\n        <RelativePrecision>" + relativePrecision
			+ "</RelativePrecision>";
	};

	if (confidenceLevel != null) {
		xmlStr += "\n        <ConfidenceLevel>" + confidenceLevel
			+ "</ConfidenceLevel>";
	};

	if (transientPeriod != null) {
		xmlStr += "\n        <TransientPeriod>" + transientPeriod
			+ "</TransientPeriod>";
	};

	return xmlStr;

    }; // toString

}; // class Simuate
